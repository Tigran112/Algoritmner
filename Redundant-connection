class UnionFind:
    def __init__(self, size):
        self.parent = list(range(size + 1))

    def find(self, x):
        if self.parent[x] != x:
            self.parent[x] = self.find(self.parent[x]) 
        return self.parent[x]

    def union(self, x, y):
        rootX = self.find(x)
        rootY = self.find(y)
        if rootX == rootY:
            return False 
        self.parent[rootY] = rootX
        return True


def blabla(edges):
    n = len(edges)
    uf = UnionFind(n)
    for u, v in edges:
        if not uf.union(u, v):
            return [u, v]


print(blabla([[1, 2], [1, 3], [2, 3]]))          
print(blabla([[1, 2], [2, 3], [3, 4], [1, 4], [1, 5]])) 
